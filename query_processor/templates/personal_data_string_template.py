from query_processor.templates.template import Template


class PersonalDataStringTemplate(Template):
    fields = ["name", "address", "document",
              "invention_name", "invention_register_number",
              "applicant", "signatory", "date"]

    file_template = """
Фамилия, имя, отчество (последнее – при наличии) субъекта персональных данных {name}

Адрес места жительства {address}

Документ, удостоверяющий личность субъекта персональных данных, дата его выдачи и выдавший орган {document}
СОГЛАСИЕ НА ОБРАБОТКУ ПЕРСОНАЛЬНЫХ ДАННЫХ

Настоящим выражаю согласие на обработку моих персональных данных, предусмотренную частью 3 статьи 3 Федерального закона от 27 июля 2006 г. № 152-ФЗ, в целях предоставления Федеральной службой по интеллектуальной собственности (Роспатент) в соответствии с Федеральным законом 
от 27 июля 2010 г. № 210-ФЗ «Об организации предоставления государственных и муниципальных услуг» государственной услуги по государственной регистрации изобретения и выдаче патента на изобретение, его дубликата.
{invention_name}
(указывается название изобретения)
№ заявки {invention_register_number}
(указывается при наличии регистрационного номера заявки)
Заявитель: {applicant}
(указываются фамилия, имя, отчество (последнее – при наличии) и место жительства)

Мне известно, что предоставленные мною персональные данные, которые не являются необходимыми для предоставления указанной государственной услуги, будут подвергнуты обработке, предусмотренной Федеральным законом от 27 июля 2006 г. 
№ 152-ФЗ, при этом публикация моих персональных данных будет произведена Роспатентом в соответствии с действующим законодательством.
Мне известно, что настоящее согласие действует бессрочно. В случае отзыва согласия на обработку персональных данных Федеральная служба по интеллектуальной собственности вправе продолжить обработку персональных данных без моего согласия в соответствии с частью 2 статьи 9, пунктом 4 части 1 статьи 6 Федерального закона 
от 27 июля 2006 г. № 152-ФЗ.

Подпись {signatory}        Дата {date}
фамилия, имя, отчество (последнее – при наличии)

    """

    def get_fields(self):
        return self.fields

    def fill(self, fields) -> str:
        return self.file_template.format_map(fields)
